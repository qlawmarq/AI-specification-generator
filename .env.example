# Japanese Specification Generator Configuration
# 
# This file contains all the environment variables needed to configure the
# Japanese Specification Generator. Copy this file to .env and set the
# appropriate values for your environment.

# ============================================================================
# LLM Configuration
# ============================================================================

# OpenAI API Configuration
OPENAI_API_KEY=your-openai-api-key-here

# Azure OpenAI Configuration (alternative to OpenAI)
AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com/
AZURE_OPENAI_KEY=your-azure-openai-key-here
AZURE_OPENAI_VERSION=2024-02-01

# Gemini API Configuration (alternative to OpenAI)
GEMINI_API_KEY=your-gemini-api-key-here

# LLM Provider Selection
# Options: openai, azure, gemini
LLM_PROVIDER=openai

# Override default model (optional)
# Examples: gpt-4, gpt-3.5-turbo, gemini-pro
LLM_MODEL=gpt-4

# ============================================================================
# Processing Configuration
# ============================================================================

# Text Processing Settings
CHUNK_SIZE=4000
CHUNK_OVERLAP=200

# Memory Management
MAX_MEMORY_MB=1024

# Parallel Processing
PARALLEL_PROCESSES=4

# ============================================================================
# Output Configuration
# ============================================================================

# Output format for generated specifications
OUTPUT_FORMAT=japanese_detailed_design

# ============================================================================
# Performance Settings
# ============================================================================

# Request timeout in seconds
REQUEST_TIMEOUT=600

# Maximum retry attempts
MAX_RETRIES=3

# Delay between retries in seconds
RETRY_DELAY=1

# Rate limiting (requests per minute)
RATE_LIMIT_RPM=200

# Batch size for processing
BATCH_SIZE=10

# ============================================================================
# Japanese Specification Settings
# ============================================================================

# Document title
DOCUMENT_TITLE=システム仕様書

# Include table of contents (true/false)
INCLUDE_TOC=true

# Use section numbering (true/false)
SECTION_NUMBERING=true

# Include code examples (true/false)
CODE_EXAMPLES=true

# Include diagrams (true/false)
DIAGRAMS=false

# ============================================================================
# Logging Configuration (optional)
# ============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path (optional)
LOG_FILE=

# ============================================================================
# Supported Languages
# ============================================================================

# Comma-separated list of supported programming languages
# Options: python, javascript, typescript, java, cpp, c
SUPPORTED_LANGUAGES=python,javascript,typescript,java,cpp,c

# ============================================================================
# File Processing
# ============================================================================

# Patterns to exclude from processing (comma-separated)
EXCLUDE_PATTERNS=*/node_modules/*,*/venv/*,*/.*,*.pyc,__pycache__,*/build/*,*/dist/*,*/target/*,*.min.js,*.bundle.js

# ============================================================================
# Tree-sitter Configuration
# ============================================================================

# Tree-sitter language mappings (JSON format)
TREE_SITTER_LANGUAGES='{"python": "tree_sitter_python", "javascript": "tree_sitter_javascript", "typescript": "tree_sitter_typescript", "java": "tree_sitter_java", "cpp": "tree_sitter_cpp", "c": "tree_sitter_c"}'

# ============================================================================
# Usage Examples
# ============================================================================

# Basic usage with OpenAI:
# OPENAI_API_KEY=sk-your-key-here
# LLM_PROVIDER=openai
# LLM_MODEL=gpt-4

# Azure OpenAI usage:
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_KEY=your-azure-key-here
# LLM_PROVIDER=azure

# Gemini usage:
# GEMINI_API_KEY=your-gemini-key-here
# LLM_PROVIDER=gemini

# High-performance configuration:
# MAX_MEMORY_MB=2048
# PARALLEL_PROCESSES=8
# CHUNK_SIZE=8000
# RATE_LIMIT_RPM=500

# Development configuration:
# LOG_LEVEL=DEBUG
# MAX_RETRIES=1
# REQUEST_TIMEOUT=60